#!/usr/bin/env python

# Copyright (c) 2011, Willow Garage, Inc.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
#    * Redistributions of source code must retain the above copyright
#      notice, this list of conditions and the following disclaimer.
#    * Redistributions in binary form must reproduce the above copyright
#      notice, this list of conditions and the following disclaimer in the
#      documentation and/or other materials provided with the distribution.
#    * Neither the name of the Willow Garage, Inc. nor the names of its
#      contributors may be used to endorse or promote products derived from
#       this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

import rospy
import paho.mqtt.client as mqtt
from geometry_msgs.msg import Twist
import sys, select, os, json, time
if os.name == 'nt':
  import msvcrt
else:
  import tty, termios

msg="""

CTRL-C to quit
"""

e = """
Communications Failed
"""

#Keep the getKey fuction to stop the program
def getKey():
    if os.name == 'nt':
	print('go')
      	if sys.version_info[0] >= 3:
        	return msvcrt.getch().decode()
      	else:
        	return msvcrt.getch()

    tty.setraw(sys.stdin.fileno())
    rlist, _, _ = select.select([sys.stdin], [], [], 0.1)
    if rlist:
        key = sys.stdin.read(1)
    else:
        key = ''

    termios.tcsetattr(sys.stdin, termios.TCSADRAIN, settings)
    return key

#Callback message from mqtt to get the json data sent by the publisher, Decode it into a dict, set the Twist message to match the command ans publish the message

def on_message(client, userdata, msg):
    topic=msg.topic
    m_decode=str(msg.payload.decode("utf-8","ignore"))
    cmd_in=json.loads(m_decode) #decode json data
    print("linear velocity = ",cmd_in["lin_x"])
    print("angular velocity = ",cmd_in["ang_z"])
    twist = Twist()
    twist.linear.x = cmd_in["lin_x"]; twist.linear.y = 0.0; twist.linear.z = 0.0
    twist.angular.x = 0.0; twist.angular.y = 0.0; twist.angular.z = cmd_in['ang_z']
    pub.publish(twist)




if __name__=="__main__":
    if os.name != 'nt':
        settings = termios.tcgetattr(sys.stdin)

#Setup the publisher ros node, the variables and the mqtt client

    rospy.init_node('mqtt_teleop')
    pub = rospy.Publisher('cmd_web', Twist, queue_size=10)

    target_linear_vel   = 0.0
    target_angular_vel  = 0.0
    control_linear_vel  = 0.0
    control_angular_vel = 0.0
    client = mqtt.Client("MQTT ROS Client")
    client.on_message = on_message
    client.connect("mqtt.eclipseprojects.io", 1883, 60)


    try:
	print(msg)
	while(1):
	#Checks if Ctrl-C is pressed to end the loop
	    key = getKey()
	    if (key == '\x03'):
	    	break
            client.loop_start() #start the mqtt loop
	    print("---------------------------------------\n")
	    client.subscribe("cmd_ros", qos=0) #Subscribe to the mqtt topic and calls callback
	    




	    time.sleep(0.05) # wait 50ms

	    client.loop_stop() #Stop the mqtt loop


    except:
        print(e)

    finally:

	#Reset the command to 0 before closing the program
        twist = Twist()
        twist.linear.x = 0.0; twist.linear.y = 0.0; twist.linear.z = 0.0
        twist.angular.x = 0.0; twist.angular.y = 0.0; twist.angular.z = 0.0
        pub.publish(twist)

    if os.name != 'nt':
        termios.tcsetattr(sys.stdin, termios.TCSADRAIN, settings)
